name: "VGG_ILSVRC_16_layer"

layer {
  name: "Data"
  type: "Python"
  top: "data"
  top: "label"
  python_param {
    module: "cityscapes_data_3"
    layer: "CityscapesDataLayer"
    param_str: '{ "batch_size": 8, "source": "./dataset/cityscapes_train.txt" }'
  }
}


layer {
  bottom: "data"
  top: "conv1_1"
  name: "conv1_1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
    num_output: 64
    pad: 3
    kernel_size: 7
  }
}
layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "conv1_1_bn"
  type: "BatchNorm"
}
layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "conv1_1_scale"
  type: "Scale"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  scale_param {
    axis: 1
    num_axes: 1
    filler {
      type: "constant"
      value: 1.0000001
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
    bias_term: true
  }
}
layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: "ReLU"
}


layer {
  bottom: "conv1_1"
  top: "pool1"
  top: "pool1_mask"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}


layer {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
    num_output: 64
    pad: 3
    kernel_size: 7
  }
}
layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "conv2_1_bn"
  type: "BatchNorm"
}
layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "conv2_1_scale"
  type: "Scale"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  scale_param {
    axis: 1
    num_axes: 1
    filler {
      type: "constant"
      value: 1.0000001
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
    bias_term: true
  }
}
layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: "ReLU"
}


layer {
  bottom: "conv2_1"
  top: "pool2"
  top: "pool2_mask"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}


layer {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
    num_output: 64
    pad: 3
    kernel_size: 7
  }
}
layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "conv3_1_bn"
  type: "BatchNorm"
}
layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "conv3_1_scale"
  type: "Scale"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  scale_param {
    axis: 1
    num_axes: 1
    filler {
      type: "constant"
      value: 1.0000001
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
    bias_term: true
  }
}
layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1"
  type: "ReLU"
}


layer {
  bottom: "conv3_1"
  top: "pool3"
  top: "pool3_mask"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  bottom: "pool3"
  top: "conv4_1"
  name: "conv4_1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
    num_output: 64
    pad: 3
    kernel_size: 7
  }
}
layer {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "conv4_1_bn"
  type: "BatchNorm"
}
layer {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "conv4_1_scale"
  type: "Scale"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  scale_param {
    axis: 1
    num_axes: 1
    filler {
      type: "constant"
      value: 1.0000001
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
    bias_term: true
  }
}
layer {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "relu4_1"
  type: "ReLU"
}

layer {
  bottom: "conv4_1"
  top: "pool4"
  top: "pool4_mask"
  name: "pool4"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  bottom: "pool4"
  top: "pool4_D"
  name: "upsample4"
  type: "Upsample"
  bottom: "pool4_mask"
  upsample_param {
    upsample_w: 64
    upsample_h: 32
  }
}

layer {
  bottom: "pool4_D"
  top: "conv4_1_D"
  name: "conv4_1_D"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
    num_output: 64
    pad: 3
    kernel_size: 7
  }
}
layer {
  bottom: "conv4_1_D"
  top: "conv4_1_D"
  name: "conv4_1_D_bn"
  type: "BatchNorm"
}
layer {
  bottom: "conv4_1_D"
  top: "conv4_1_D"
  name: "conv4_1_D_scale"
  type: "Scale"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  scale_param {
    axis: 1
    num_axes: 1
    filler {
      type: "constant"
      value: 1.0000001
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
    bias_term: true
  }
}
layer {
  bottom: "conv4_1_D"
  top: "conv4_1_D"
  name: "relu4_1_D"
  type: "ReLU"
}

layer {
  name: "upsample3"
  type: "Upsample"
  bottom: "conv4_1_D"
  bottom: "pool3_mask"
  top: "pool3_D"
  upsample_param {
    upsample_w: 128
    upsample_h: 64
  }
}

layer {
  bottom: "pool3_D"
  top: "conv3_1_D"
  name: "conv3_1_D"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
    num_output: 64
    pad: 3
    kernel_size: 7
  }
}
layer {
  bottom: "conv3_1_D"
  top: "conv3_1_D"
  name: "conv3_1_D_bn"
  type: "BatchNorm"
}
layer {
  bottom: "conv3_1_D"
  top: "conv3_1_D"
  name: "conv3_1_D_scale"
  type: "Scale"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  scale_param {
    axis: 1
    num_axes: 1
    filler {
      type: "constant"
      value: 1.0000001
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
    bias_term: true
  }
}
layer {
  bottom: "conv3_1_D"
  top: "conv3_1_D"
  name: "relu3_1_D"
  type: "ReLU"
}

layer {
  name: "upsample2"
  type: "Upsample"
  bottom: "conv3_1_D"
  bottom: "pool2_mask"
  top: "pool2_D"
  upsample_param {
    upsample_w: 256
    upsample_h: 128
  }
}

layer {
  bottom: "pool2_D"
  top: "conv2_1_D"
  name: "conv2_1_D"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
    num_output: 64
    pad: 3
    kernel_size: 7
  }
}
layer {
  bottom: "conv2_1_D"
  top: "conv2_1_D"
  name: "conv2_1_D_bn"
  type: "BatchNorm"
}
layer {
  bottom: "conv2_1_D"
  top: "conv2_1_D"
  name: "conv2_1_D_scale"
  type: "Scale"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  scale_param {
    axis: 1
    num_axes: 1
    filler {
      type: "constant"
      value: 1.0000001
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
    bias_term: true
  }
}
layer {
  bottom: "conv2_1_D"
  top: "conv2_1_D"
  name: "relu2_1_D"
  type: "ReLU"
}
layer {
  name: "upsample1"
  type: "Upsample"
  bottom: "conv2_1_D"
  top: "pool1_D"
  bottom: "pool1_mask"
  upsample_param {
    upsample_w: 512
    upsample_h: 256
  }
}

layer {
  bottom: "pool1_D"
  top: "conv1_2_D"
  name: "conv1_2_D"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
    num_output: 64
    pad: 3
    kernel_size: 7
  }
}
layer {
  bottom: "conv1_2_D"
  top: "conv1_2_D"
  name: "conv1_2_D_bn"
  type: "BatchNorm"
}
layer {
  bottom: "conv1_2_D"
  top: "conv1_2_D"
  name: "conv1_2_D_scale"
  type: "Scale"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  scale_param {
    axis: 1
    num_axes: 1
    filler {
      type: "constant"
      value: 1.0000001
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
    bias_term: true
  }
}
layer {
  bottom: "conv1_2_D"
  top: "conv1_2_D"
  name: "relu1_2_D"
  type: "ReLU"
}

layer {
  bottom: "conv1_2_D"
  top: "conv1_1_D_regress"
  name: "conv1_1_D_regress"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
    num_output: 2
    kernel_size: 1
  }
}

layer {
  name: "loss1"
  type: "EuclideanLoss"
  bottom: "conv1_1_D_regress"
  bottom: "label"
  top: "loss1"
#  loss_weight: 0.00001
}

